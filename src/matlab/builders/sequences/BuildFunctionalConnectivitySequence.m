function [sequence] = BuildFunctionalConnectivitySequence(inputs, ...
                                                          subjectName, ...
                                                          run, ...
                                                          pathToWorkspace, ...
                                                          pathToOutput, ...
                                                          config)
%BUILDFUNCTIONALCONNECTIVITYSEQUENCE Example of a sequence builder.
%   This builder creates the typical sequence to generate functional
%   connectomes.
%
%   Input:
%   - inputs:           Inputs that will be copied into the workspace.
%   - pathToWorkspace:  Path to the sequence's workspace.
%   - pathToOutput:     Path to where we will output the data.
%
%   Output:
%   - sequence:  Built sequence.

%% step 1
% reorient to standard
step1Params = struct();
step1Config = config.step1;
step1Params.inputVolume = sprintf('%s_task-convers_%s_bold.nii.gz', ...
                                  subjectName, ...
                                  run);
step1Params.outputVolume = sprintf('%s_task-convers_%s_bold_std.nii.gz', ...
                                   subjectName, ...
                                   run);
deps1 = { step1Params.inputVolume };
outputs1 = { step1Params.outputVolume };
step1 = Step(@ReorientToStandard, ...
             step1Params, ...
             deps1, ...
             step1Config, ...
             outputs1);



%% prepare the sequence
% set up steps in order
steps = { step1 };

% these files will be copied from the workspace to the output path
outputs = { step1Params.outputVolume };

sequence = Sequence(steps, ...
                    inputs, ...
                    outputs, ...
                    pathToWorkspace, ...
                    pathToOutput, ...
                    config.sequence);

end

